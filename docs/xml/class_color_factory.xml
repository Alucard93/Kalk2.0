<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_color_factory" kind="class" language="C++" prot="public">
    <compoundname>ColorFactory</compoundname>
    <includes refid="colorfactory_8h" local="no">colorfactory.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_color_factory_1a82795c42a66a6ac3dc47e02e56434345" prot="private" static="yes" mutable="no">
        <type>QMap&lt; QString, <ref refid="class_generic_factory" kindref="compound">GenericFactory</ref> * &gt; *</type>
        <definition>QMap&lt; QString, GenericFactory * &gt; * ColorFactory::allColorFactories</definition>
        <argsstring></argsstring>
        <name>allColorFactories</name>
        <initializer>=nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="18" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_color_factory_1ad47298cad09cd5d2eb52c801354f5c8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ColorFactory::setUpColorFactory</definition>
        <argsstring>()</argsstring>
        <name>setUpColorFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="20" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="5" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a998d381b54b7b74ca24a99593030a452" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ColorFactory::ready</definition>
        <argsstring>()</argsstring>
        <name>ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="21" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="10" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a16fd150054d514e72eaf6d5bf9e80fe2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ColorFactory::addColorFactory</definition>
        <argsstring>(const QString &amp;name, GenericFactory &amp;factory)</argsstring>
        <name>addColorFactory</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_generic_factory" kindref="compound">GenericFactory</ref> &amp;</type>
          <declname>factory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="22" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a47dab64f01e0d5543ed41d82742b1a32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVector&lt; QString &gt;</type>
        <definition>QVector&lt; QString &gt; ColorFactory::getAllColorTypes</definition>
        <argsstring>()</argsstring>
        <name>getAllColorTypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="23" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a099bdd20a8630f8c92fe292216d3fb88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_color" kindref="compound">Color</ref> *</type>
        <definition>Color * ColorFactory::GetNewColor</definition>
        <argsstring>(QString &amp;key)</argsstring>
        <name>GetNewColor</name>
        <param>
          <type>QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="24" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1ad2fdc01b2d182ac8e866ea781cd6825f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_color" kindref="compound">Color</ref> *</type>
        <definition>Color * ColorFactory::Execution</definition>
        <argsstring>(Color *left, int operation, Color *right=nullptr)</argsstring>
        <name>Execution</name>
        <param>
          <type><ref refid="class_color" kindref="compound">Color</ref> *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>operation</declname>
        </param>
        <param>
          <type><ref refid="class_color" kindref="compound">Color</ref> *</type>
          <declname>right</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="25" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="26" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a4985eb664ac2d22871b33ec52bf2479c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_color" kindref="compound">Color</ref> *</type>
        <definition>Color * ColorFactory::Execution</definition>
        <argsstring>(Color *left, int operation, int right=1)</argsstring>
        <name>Execution</name>
        <param>
          <type><ref refid="class_color" kindref="compound">Color</ref> *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="26" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a9dc30325232e3cf63276ed8f9c2d6ab1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVector&lt; QString &gt;</type>
        <definition>QVector&lt; QString &gt; ColorFactory::availableOperations</definition>
        <argsstring>()</argsstring>
        <name>availableOperations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="27" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="42" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a475c254fd0d4e091dab0bc9d4bd64748" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVector&lt; QString &gt;</type>
        <definition>QVector&lt; QString &gt; ColorFactory::permittedOperations</definition>
        <argsstring>(QString &amp;type)</argsstring>
        <name>permittedOperations</name>
        <param>
          <type>QString &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="28" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a460165d3cd7b710b4f8731a5e56d8c35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVector&lt; QString &gt;</type>
        <definition>QVector&lt; QString &gt; ColorFactory::typeByOperation</definition>
        <argsstring>(int operation)</argsstring>
        <name>typeByOperation</name>
        <param>
          <type>int</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="29" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="54" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a08c21c5ec305802deb7d610ff0a66ef7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ColorFactory::getTypeSize</definition>
        <argsstring>()</argsstring>
        <name>getTypeSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="30" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>this class stores all Factories, initializes a New <ref refid="class_color" kindref="compound">Color</ref> object when required, returns what kind of operation can be done with a specific color rappresentation and returs the result using the permitted operations </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="16" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" bodystart="16" bodyend="31"/>
    <listofallmembers>
      <member refid="class_color_factory_1a16fd150054d514e72eaf6d5bf9e80fe2" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>addColorFactory</name></member>
      <member refid="class_color_factory_1a82795c42a66a6ac3dc47e02e56434345" prot="private" virt="non-virtual"><scope>ColorFactory</scope><name>allColorFactories</name></member>
      <member refid="class_color_factory_1a9dc30325232e3cf63276ed8f9c2d6ab1" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>availableOperations</name></member>
      <member refid="class_color_factory_1ad2fdc01b2d182ac8e866ea781cd6825f" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>Execution</name></member>
      <member refid="class_color_factory_1a4985eb664ac2d22871b33ec52bf2479c" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>Execution</name></member>
      <member refid="class_color_factory_1a47dab64f01e0d5543ed41d82742b1a32" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>getAllColorTypes</name></member>
      <member refid="class_color_factory_1a099bdd20a8630f8c92fe292216d3fb88" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>GetNewColor</name></member>
      <member refid="class_color_factory_1a08c21c5ec305802deb7d610ff0a66ef7" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>getTypeSize</name></member>
      <member refid="class_color_factory_1a475c254fd0d4e091dab0bc9d4bd64748" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>permittedOperations</name></member>
      <member refid="class_color_factory_1a998d381b54b7b74ca24a99593030a452" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>ready</name></member>
      <member refid="class_color_factory_1ad47298cad09cd5d2eb52c801354f5c8e" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>setUpColorFactory</name></member>
      <member refid="class_color_factory_1a460165d3cd7b710b4f8731a5e56d8c35" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>typeByOperation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
